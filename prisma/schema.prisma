// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  firstName    String
  lastName     String
  email        String         @unique
  password     String 
  role         String
  isSocial     Boolean        @default(false)
  enable2FA     Boolean        @default(false)
  isEmailVerified     Boolean        @default(false)
  emailNotification     Boolean        @default(true)
  twoFactorSecret     String?
  tenantId     Int?
  tenant       Tenant?         @relation(fields: [tenantId], references: [id],onDelete: Cascade)
  refreshTokens RefreshToken[]   
  updatedAt DateTime @updatedAt 
  createdAt DateTime @default(now()) 

  @@map("users")
}

model Tenant {
  id    Int    @id @default(autoincrement())
  name  String @unique 
  address String
  users User[]
  updatedAt DateTime @updatedAt 
  createdAt DateTime @default(now()) 

  @@map("tenants") 
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int   
  user      User     @relation(fields: [userId], references: [id],onDelete: Cascade)
  userAgent String?
  updatedAt DateTime @updatedAt
  deletionTime DateTime?
  expiresAt DateTime
  firstCreatedAt DateTime @default(now())
  createdAt DateTime @default(now())

  @@map("refresh_tokens") 
}
