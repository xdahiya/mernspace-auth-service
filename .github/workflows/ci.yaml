name: CI
on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main
jobs:
    build-and-test:
        name: Build the project
        runs-on: ubuntu-latest
        # if: github.event_name == 'pull_request'
        steps:
            - uses: actions/checkout@v3
            - name: Install dependencies
              run: npm ci
            - name: Run eslint
              run: npm run lint
            - name: Test and coverage
              run: npm run test
              env:
                  NODE_OPTIONS: "--max-old-space-size=4096"
                  NODE_ENV: "test"
                  DATABASE_URL: ${{ secrets.TEST_DATABASE_URL }}
                  CURRENT_BACKEND_DOMAIN: ${{ secrets.CURRENT_BACKEND_DOMAIN }}
                  REFRESH_TOKEN_SECRET: ${{ secrets.REFRESH_TOKEN_SECRET }}
                  JWKS_URI: ${{ secrets.JWKS_URI }}
                  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
                  GITHUB_CLIENT_ID: ${{ secrets.GITH_CLIENT_ID }}
                  GITHUB_CLIENT_SECRET: ${{ secrets.GITH_CLIENT_SECRET }}
                  CLIENT_UI_DOMAIN: ${{ secrets.CLIENT_UI_DOMAIN }}
                  ADMIN_UI_DOMAIN: ${{ secrets.ADMIN_UI_DOMAIN }}
                  MAIN_DOMAIN: ${{ secrets.MAIN_DOMAIN }}
                  CURRENT_BACKEND_DOMAIN: ${{ CURRENT_BACKEND_DOMAIN.MAIN_DOMAIN }}
            - name: Build-ts
              run: npm run build

            # - name: SonarCloud Scan
            #   uses: SonarSource/sonarcloud-github-action@master
            #   env:
            #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            #       SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    build-and-push-docker:
        name: Build and Push Docker Image
        needs: build-and-test
        runs-on: ubuntu-latest
        env:
            IMAGE_NAME: ramandahiya/mernsapce_auth_service # codersgyan/mernstack_auth_service:build-2
            IMAGE_TAG: build-${{ github.run_number }}
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Log in to Docker Hub
              uses: docker/login-action@v1
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: Build Docker image
              run: docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f docker/prod/Dockerfile .
            - name: Push Docker image to Docker Hub
              run: docker push ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}